#cache_timeout = 864000
cache_timeout = 0

#
# 
#
browseTypes = {
	archive = {
		displayName = _(Archive),
		labelSingular = _("item"),
 		labelPlural = _("items"),
		table = ca_objects,
		
		restrictToTypes = [archival_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = archive,

		itemsPerPage = 36,

		# formats available for display of results
		views = {
			images = {
			    representation = "<ifdef code='ca_object_representations.media.medium.url'>^ca_object_representations.media.medium.url</ifdef><ifnotdef code='ca_object_representations.media.medium.url'>/themes/noguchi/assets/pawtucket/graphics/placeholder.png</ifnotdef>",
			    caption = "^ca_objects.preferred_labels.name",
			    caption2 = " ^ca_objects.idno",
			    date = "<ifdef code='ca_objects.date.display_date'>^ca_objects.date.display_date</ifdef><ifnotdef code='ca_objects.date.display_date'><ifdef code='ca_objects.date.parsed_date'>^ca_objects.date.parsed_date</ifdef></ifnotdef>",
			    type = "^ca_objects.type_id"
			},
		},
		sortBy = {
			Date = ca_objects.date.parsed_date;ca_objects.idno
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc
		},
		introduction = {
		    # Set "title" and "description" here to display static text
		    # To pull data from a specific "authority" filter, if applied, use the filter name as the key
		    # and set the value to a dictionary with title and description keys; the values for these keys
		    # will be evaluated as a display template relative to the selected authority record.
		    collection_facet = {
		        title = ^ca_collections.preferred_labels.name,
                description = ^ca_collections.scopecontent
		    }
		},
		excludeFieldsFromSearch = [ca_objects.internal_notes]
	},
	cr = {
		displayName = _(CR),
		labelSingular = _("item"),
 		labelPlural = _("items"),
		table = ca_objects,
		
		restrictToTypes = [artwork,group],
		dontShowChildren = 1,
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = cr,
		
		itemsPerPage = 36,
		
		# formats available for display of results
		views = {
			images = {
                representation = "<ifdef code='ca_object_representations.media.large'>^ca_object_representations.media.large</ifdef><ifnotdef code='ca_object_representations.media.large'><img nopin='nopin' src='/themes/noguchi/assets/pawtucket/graphics/placeholder.png' alt='Image Not Available'></ifnotdef>",
            	date = "<ifdef code='ca_objects.date.display_date'>^ca_objects.date.display_date</ifdef><ifnotdef code='ca_objects.date.display_date'><ifdef code='ca_objects.date.parsed_date'>^ca_objects.date.parsed_date</ifdef></ifnotdef>",
            	idnoStatus = "<ifdef code='ca_objects.idno'>^ca_objects.idno<if rule='^ca_objects.status =~ /pending/'>*</if></ifdef>"
            },
		},
		sortBy = {
			Identifier = ca_objects.idno_sort
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc
		},
		excludeFieldsFromSearch = [ca_objects.internal_notes, ca_objects.catalogue_notes]
	},
	bibliography = {
		displayName = _(Bibliography),
		labelSingular = _("Bibliography"),
 		labelPlural = _("Bibliography"),
		table = ca_occurrences,
		restrictToTypes = [bibliography],
		
		itemsPerPage = 84,
		# formats available for display of results
		views = {
			images = {
				citation = "^ca_occurrences.bib_full_citation",
            	format = "^ca_occurrences.citation_format"
			}
		},
		
		sortBy = {
			Date = ca_occurrences.bib_year_published
		},
		introduction = {
        	title = Bibliography,
        	description = "^_global_var.bibliographyIntro"
        },
		excludeFieldsFromSearch = [ca_occurrences.internal_notes]
	},
	library = {
		displayName = _(Library),
		labelSingular = _("item"),
 		labelPlural = _("items"),
		table = ca_objects,
		
		restrictToTypes = [library],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = library,

		itemsPerPage = 84,

		# formats available for display of results
		views = {
			images = {
			    representation = "<ifdef code='ca_object_representations.media.medium.url'>^ca_object_representations.media.medium.url</ifdef><ifnotdef code='ca_object_representations.media.medium.url'>/themes/noguchi/assets/pawtucket/graphics/placeholder.png</ifnotdef>",
			    label = "^ca_objects.preferred_labels.name<ifdef code='ca_objects.bib_subtitle'> ^ca_objects.bib_subtitle</ifdef>",
			    author = "<ifcount code='ca_entities' restrictToRelationshipTypes='author'><unit relativeTo='ca_entities' restrictToRelationshipTypes='author' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount>"
			},
		},
		sortBy = {
			date = ca_objects.date.parsed_date,
			Identifier = ca_objects.idno
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			date = asc
		},
		introduction = {
		    title = "Isamu Noguchi Personal Library",
            description = "The Isamu Noguchi Personal Library is the extant collection of books and periodicals from Noguchi's lifetime, with nearly 1000 volumes currently catalogued."
		},
		excludeFieldsFromSearch = [ca_objects.internal_notes]
	},
	exhibitions = {
		displayName = _(Exhibitions),
		labelSingular = _("exhibition"),
 		labelPlural = _("exhibitions"),
		table = ca_occurrences,
		restrictToTypes = [exhibition],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		itemsPerPage = 84,
		# formats available for display of results
		views = {
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
		excludeFieldsFromSearch = [ca_occurrences.internal_notes]
	}
}

ca_objects = {
	name = _("Objects"),
	facets = {
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [series],
			facet_groups = [archive],
			
			group_mode = none,
			show_description_when_first_facet = scopecontent,
			multiple = 1, 
			
			label_singular = _("collection"),
			label_plural = _("collections"),
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			facet_groups = [archive],
			
			group_mode = alphabetical,
			multiple = 1, 
			order_by_label_fields = [name_plural],

			label_singular = _("type"),
			label_plural = _("types")
		},	
		decade_facet = {
			type = normalizedDates,
			element_code = parsed_date,
			normalization = decades,
			facet_groups = [archive,cr,library],
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("decade"),
			label_plural = _("decades")		
		},
		subcategory_facet = {
			type = attribute,
			element_code = subcategory,
			facet_groups = [library], 
			order_by_label_fields = [name_plural],
			multiple = 1, 
			
			label_singular = _("Category"),
			label_plural = _("Category")
		},
		subseries_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [subseries,file],
			facet_groups = [archive],
			requires = collection_facet,
			order_by_label_fields = [name],
			multiple = 1, 
			
			group_mode = none,

			label_singular = _("series"),
			label_plural = _("series"),
		},
		archive_category_facet = {
			type = attribute,
			element_code = archive_category,
			facet_groups = [archive], 
			requires = collection_facet,
			order_by_label_fields = [name_plural],
			multiple = 1, 
			
			label_singular = _("Archive Category"),
			label_plural = _("Archive Categories")
		},
		study_collection_category_facet = {
			type = attribute,
			element_code = studyCollectionCategory,
			facet_groups = [archive], 
			requires = collection_facet,
			order_by_label_fields = [name_plural],
			multiple = 1, 
			
			label_singular = _("Study Collection Category"),
			label_plural = _("Study Collection Categories")
		},
		classification_facet = {
			type = attribute,
			element_code = classification,
			facet_groups = [cr], 
			order_by_label_fields = [name_plural],
			multiple = 1, 
			
			label_singular = _("Type"),
			label_plural = _("Types")
		},
		material_facet = {
			type = attribute,
			element_code = material,
			facet_groups = [cr],
			multiple = 1, 
			
			label_singular = _("material"),
			label_plural = _("materials")
		},
		entity_facet = {
			type = authority,
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			facet_groups = [archive,cr,library],
			requires = x,
			
			group_mode = none,

			label_singular = _("entity"),
			label_plural = _("entities"),
		},	
#		has_media_facet = {
#			type = has,
#			
#			table = ca_object_representations,
#			relationship_table = ca_objects_x_object_representations,
#			restrict_to_types = [],
#			restrict_to_relationship_types = [],
#			
#			label_yes = _("Has media"),
#			label_no = _("Does not have media"),
#			
#			single_value = 1,
#			facet_groups = [cr],
#			
#			label_singular = _("media"),
#			label_plural = _("media"),
#		}
	}
}
ca_occurrences = {
	name = _("Occurrences"),
	facets = {
		format_facet = {
			type = attribute,
			element_code = citation_format,
			facet_groups = [],
			multiple = 1,
			
			label_singular = _("format"),
			label_plural = _("formats")
		},	
		decade_facet = {
			type = normalizedDates,
			element_code = bib_year_published,
			normalization = decades,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("decade"),
			label_plural = _("decades")		
		},	
		has_media_facet = {
			type = has,
			
			table = ca_objects,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = ["archival_item","document","objects","photographs","digital","print","strip","transparency","strip_image"],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			facet_groups = [cr],
			
			label_singular = _("media"),
			label_plural = _("media"),
		}
	}
}
