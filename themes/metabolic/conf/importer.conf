
importerForms = {

	sonic = {
		formTitle = Sonic Division Media Upload,
		formDescription = "Upload for media related to Sonic Division"
		shortNameSingular = Sonic Division media submission,
		shortNamePlural = Sonic Division media submissions,
		
		# User roles to restrict this form to
		#restrictToRoles = [],
		
		table = ca_objects,
		type = album,
		access = 0,
		status = 0,
		
		representation_type = front,
		representation_status = 0,
		representation_access = 1,

		showInUserSubmissionList = 0,
		
		alwaysUseLocale = en_US,
		
		# template for idno; use "%" as placeholder for serial numbers
		idno = "2021.%",
		
		display = "^title <ifdef code='date'>(^date)</ifdef>",
		
		
		# List of fields in form
		#
		#	errorPriority indicates how to handle errors in a given field. 
		#		Possible values are:
		#			"critical" => any error should prevent submission of form [DEFAULT]
		#			"optional" => if error occurs ignore value and proceed
		content = {
			title = {
				bundle = ca_objects.preferred_labels.name,
				label = Title,
				
				height = 2,
				
				errorPriority = critical
			},
			date =  {
				bundle = ca_objects.date,
				label = Date,
				errorPriority = optional,
				
				useDatePicker = 1,
				
				dontRepeat = 1
			},
			action =  {
				bundle = ca_collections,
				restrictToTypes = [action],
				label = Related Action,
				errorPriority = optional,
				
				relationshipType = part_of,
				
				render = checkboxes,
				
				options = {
					AgH20 = 236,
					Anabolic Monument = 209,
					BTR = 214,
					Farmlab = 202,
					IOU = 234,
					Optics = 198,
					Sonic Division = 223,
					Special Project in Archiving = 229,
					Strawberry Flag = 1,
					Undevelopment 1 = 230,
					100 Mules = 216
				}
			},
			people =  {
				bundle = ca_entities,
				label = Related People,
				errorPriority = optional,
				
				relationshipType = related,
				
				render = checkboxes,
				options = {
					 Aaron Ebensperger = 439,
					 Carmina Escobar = 100002,
					 Cascade Wilhem = 467,
					 Dani Lunn = 234,
					 Dave Baine = 434,
					 Douglas Lee = 69,
					 Emily Lacy = 447,
					 Josh White = 37,
					 Juan Jose = 100000,
					 Lauren Bon = 1,
					 O-Lan Jones = 408,
					 Roxanne Steinberg = 5,
					 Stefano Galli = 100001 
				}
			},
			media_type =  {
				bundle = ca_objects.physical_media,
				label = Media Type,
				errorPriority = optional,
				
				#render = checkboxes
			},
			description = {
				bundle = ca_objects.description,
				label = Description,
				description = "A description of the media uploaded",
				height = 6
			},		
		}
		options = {
			# importMode = type of image
			#	Possible values are:
			#		"media" => create one record per-media item; each record has entered metadata [DEFAULT]
			#		"hierarchy" => create root record with metadata; add media as child records
			#		"allInOne" => create single record with entered metadata; link all media to that record 
			importMode = hierarchy,
			
			# What to do when there are errors?
			#	Possible values are:
			#		"requireNoErrors" => only save when there are no metadata errors
			#		"allowErrors" => save if there are non-critical errors
			
			errorPolicy = requireNoErrors,
		}
	},
	
	crisisarchive = {
		formTitle = Crisis Archive,
		formDescription = "Photographer's import form for Crisis Archive"
		shortNameSingular = Crisis Archive submission,
		shortNamePlural = Crisis Archive submissions,
		
		# User roles to restrict this form to
		#restrictToRoles = [],
		
		table = ca_objects,
		type = album,
		access = 0,
		status = 0,
		
		representation_type = front,
		representation_status = 0,
		representation_access = 1,

		showInUserSubmissionList = 0,
		
		alwaysUseLocale = en_US,
		
		# template for idno; use "%" as placeholder for serial numbers
		idno = "2021.%",
		
		display = "^title <ifdef code='date'>(^date)</ifdef>",
		
		
		# List of fields in form
		#
		#	errorPriority indicates how to handle errors in a given field. 
		#		Possible values are:
		#			"critical" => any error should prevent submission of form [DEFAULT]
		#			"optional" => if error occurs ignore value and proceed
		content = {
			title = {
				bundle = ca_objects.preferred_labels,
				label = Title,
				
				errorPriority = critical
			},
			description = {
				bundle = ca_objects.description,
				height = 2,
			},
			bio_region = {
				bundle = ca_objects.bio_regions
			},
			date =  {
				bundle = ca_objects.date,
				
				errorPriority = optional,
				dontRepeat = 1
			},
			extent =  {
				bundle = ca_objects.extent,
				
				errorPriority = optional
			}		
		}
		options = {
			# importMode = type of image
			#	Possible values are:
			#		"media" => create one record per-media item; each record has entered metadata [DEFAULT]
			#		"hierarchy" => create root record with metadata; add media as child records
			#		"allInOne" => create single record with entered metadata; link all media to that record 
			importMode = hierarchy,
			
			# What to do when there are errors?
			#	Possible values are:
			#		"requireNoErrors" => only save when there are no metadata errors
			#		"allowErrors" => save if there are non-critical errors
			
			errorPolicy = requireNoErrors,
		}
	},
}
