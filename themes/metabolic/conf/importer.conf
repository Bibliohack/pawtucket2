
importerForms = {
	crisisarchive = {
		formTitle = Crisis Archive,
		formDescription = "Photographer's import form for Crisis Archive"
		shortNameSingular = Crisis Archive submission,
		shortNamePlural = Crisis Archive submissions,
		
		# User roles to restrict this form to
		#restrictToRoles = [],
		
		table = ca_objects,
		type = album,
		access = 0,
		status = 0,
		
		representation_type = front,
		representation_status = 0,
		representation_access = 1,

		showInUserSubmissionList = 0,
		
		alwaysUseLocale = en_US,
		
		# template for idno; use "%" as placeholder for serial numbers
		idno = "2021.%",
		
		display = "^title <ifdef code='date'>(^date)</ifdef>",
		
		
		# List of fields in form
		#
		#	errorPriority indicates how to handle errors in a given field. 
		#		Possible values are:
		#			"critical" => any error should prevent submission of form [DEFAULT]
		#			"optional" => if error occurs ignore value and proceed
		content = {
			title = {
				bundle = ca_objects.preferred_labels,
				label = Title,
				
				errorPriority = critical
			},
			description = {
				bundle = ca_objects.description
			},
			bio_region = {
				bundle = ca_objects.bio_regions
			},
			date =  {
				bundle = ca_objects.date,
				
				errorPriority = optional
			},
			extent =  {
				bundle = ca_objects.extent,
				
				errorPriority = optional
			}		
		}
		options = {
			# importMode = type of image
			#	Possible values are:
			#		"media" => create one record per-media item; each record has entered metadata [DEFAULT]
			#		"hierarchy" => create root record with metadata; add media as child records
			#		"allInOne" => create single record with entered metadata; link all media to that record 
			importMode = hierarchy,
			
			# What to do when there are errors?
			#	Possible values are:
			#		"requireNoErrors" => only save when there are no metadata errors
			#		"allowErrors" => save if there are non-critical errors
			
			errorPolicy = requireNoErrors,
		}
	}
}
